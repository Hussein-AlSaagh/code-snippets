{"ast":null,"code":"var _jsxFileName = \"/Users/hussein/Desktop/Code-Snippets/React/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return { ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n\n      if (state.currentOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand.length === 1) {\n        return { ...state,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        previousOperand: null,\n        overwrite: true,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\n\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split('.');\n  if (decimal == null) return INTEGER_FORMATTER.format(integer);\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\n}\n\nfunction Calculator() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [formatOperand(previousOperand), \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: formatOperand(currentOperand)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calculator, \"DtApBThIwDPzgeadQYFLEWaSpPM=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/Users/hussein/Desktop/Code-Snippets/React/calculator/src/App.js"],"names":["useReducer","DigitButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","integer","decimal","split","format","Calculator","dispatch"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\"\nimport DigitButton from \"./DigitButton\"\nimport OperationButton from \"./OperationButton\"\nimport \"./styles.css\"\n\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION : \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if(state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        }\n      }\n      if(payload.digit === \"0\" && state.currentOperand === \"0\"){\n        return state\n      }\n      if(payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state\n      }\n\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if(state.currentOperand == null && state.previousOperand == null ){\n        return state\n      }\n\n      if(state.currentOperand == null){\n        return{\n          ...state,\n          operation: payload.operation,\n        }\n      }\n\n\n\n\n      if (state.previousOperand == null) {\n        return{\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      }\n    case ACTIONS.CLEAR:\n      return{}\n    case ACTIONS.DELETE_DIGIT:\n      if(state.overwrite){\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        }\n      }\n      if (state.currentOperand == null){\n        return state\n      }\n      if (state.currentOperand.length === 1){\n        return { ...state, currentOperand: null }\n      }\n\n      return{\n        ...state,\n        currentOperand: state.currentOperand.slice(0 , -1),\n      }\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null){\n        return state\n      }\n\n      return{\n        ...state,\n        previousOperand: null,\n        overwrite: true,\n        operation: null,\n        currentOperand: evaluate(state),\n      }\n  }\n}\n\n\nfunction evaluate({ currentOperand, previousOperand, operation}) {\n  const  prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation= prev + current\n      break\n\n    case \"-\":\n      computation= prev - current\n      break\n\n    case \"*\":\n      computation= prev * current\n      break\n\n    case \"รท\":\n      computation= prev / current\n      break\n  }\n\n  return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\n\nfunction formatOperand(operand) {\n  if(operand == null) return\n  const [integer, decimal] = operand.split('.')\n  if (decimal == null) return INTEGER_FORMATTER.format(integer)\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction Calculator() {\n  const [{currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  )\n\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">{formatOperand(previousOperand)} {operation}</div>\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n      </div>\n      <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.CLEAR})}>AC</button>\n      <button onClick={() => dispatch ({ type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n\n      <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.EVALUATE })}>=</button>\n    </div>\n  )\n}\n\nexport default Calculator\n"]},"metadata":{},"sourceType":"module"}